"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sourceLoader = void 0;
var _path = _interopRequireDefault(require("path"));
var _axios = _interopRequireDefault(require("axios"));
var _debug = _interopRequireDefault(require("debug"));
var _utils = require("./utils.js");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
const sourcesDebug = (0, _debug.default)('page-loader:src');
const sourceFailLoad = (0, _debug.default)('page-loader:src_fail_load');
const sourceLoader = (html, hostname, task) => {
  const links = (0, _utils.getLinks)(html, hostname);
  const promises = links.map(link => {
    if (task) {
      return Promise.resolve(task(link, _axios.default.get, {
        responseType: 'arraybuffer'
      }));
    }
    return _axios.default.get(link, {
      responseType: 'arraybuffer'
    }).catch(err => {
      sourceFailLoad(err);
      return err;
    });
  });
  return Promise.all(promises).then(data => data.filter(file => file)).then(data => data.map(file => {
    sourcesDebug(`loaded file '${file.config.url}'`);
    const ext = _path.default.extname(file.config.url);
    const pathSave = `${(0, _utils.getFileName)(file.config.url)}${ext}`;
    return {
      pathSave,
      data: file.data,
      url: file.config.url
    };
  }));
};
exports.sourceLoader = sourceLoader;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcGF0aCIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX2F4aW9zIiwiX2RlYnVnIiwiX3V0aWxzIiwib2JqIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJzb3VyY2VzRGVidWciLCJkZWJ1ZyIsInNvdXJjZUZhaWxMb2FkIiwic291cmNlTG9hZGVyIiwiaHRtbCIsImhvc3RuYW1lIiwidGFzayIsImxpbmtzIiwiZ2V0TGlua3MiLCJwcm9taXNlcyIsIm1hcCIsImxpbmsiLCJQcm9taXNlIiwicmVzb2x2ZSIsImF4aW9zIiwiZ2V0IiwicmVzcG9uc2VUeXBlIiwiY2F0Y2giLCJlcnIiLCJhbGwiLCJ0aGVuIiwiZGF0YSIsImZpbHRlciIsImZpbGUiLCJjb25maWciLCJ1cmwiLCJleHQiLCJwYXRoIiwiZXh0bmFtZSIsInBhdGhTYXZlIiwiZ2V0RmlsZU5hbWUiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiLi4vLi4vc3JjL2xpYi9zb3VyY2VMb2FkZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHBhdGggZnJvbSAncGF0aCc7XHJcbmltcG9ydCBheGlvcyBmcm9tIFwiYXhpb3NcIjtcclxuaW1wb3J0IGRlYnVnIGZyb20gJ2RlYnVnJztcclxuXHJcbmltcG9ydCB7Z2V0RmlsZU5hbWUsIGdldExpbmtzfSBmcm9tIFwiLi91dGlscy5qc1wiO1xyXG5cclxuY29uc3Qgc291cmNlc0RlYnVnID0gZGVidWcoJ3BhZ2UtbG9hZGVyOnNyYycpO1xyXG5jb25zdCBzb3VyY2VGYWlsTG9hZCA9IGRlYnVnKCdwYWdlLWxvYWRlcjpzcmNfZmFpbF9sb2FkJyk7XHJcblxyXG5leHBvcnQgY29uc3Qgc291cmNlTG9hZGVyID0gKGh0bWwsIGhvc3RuYW1lLCB0YXNrKSA9PiB7XHJcbiAgY29uc3QgbGlua3MgPSBnZXRMaW5rcyhodG1sLCBob3N0bmFtZSk7XHJcbiAgY29uc3QgcHJvbWlzZXMgPSBsaW5rcy5tYXAoKGxpbmspID0+IHtcclxuICAgIGlmICh0YXNrKSB7XHJcbiAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUodGFzayhsaW5rLCBheGlvcy5nZXQsIHsgcmVzcG9uc2VUeXBlOiAnYXJyYXlidWZmZXInIH0pKTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gYXhpb3MuZ2V0KGxpbmssIHsgcmVzcG9uc2VUeXBlOiAnYXJyYXlidWZmZXInIH0pXHJcbiAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgc291cmNlRmFpbExvYWQoZXJyKTtcclxuICAgICAgICByZXR1cm4gZXJyO1xyXG4gICAgICB9KTtcclxuICB9KTtcclxuICByZXR1cm4gUHJvbWlzZS5hbGwocHJvbWlzZXMpXHJcbiAgICAudGhlbihkYXRhID0+IGRhdGEuZmlsdGVyKGZpbGUgPT4gZmlsZSkpXHJcbiAgICAudGhlbihkYXRhID0+IGRhdGEubWFwKChmaWxlKSA9PiB7XHJcbiAgICAgIHNvdXJjZXNEZWJ1ZyhgbG9hZGVkIGZpbGUgJyR7ZmlsZS5jb25maWcudXJsfSdgKTtcclxuICAgICAgY29uc3QgZXh0ID0gcGF0aC5leHRuYW1lKGZpbGUuY29uZmlnLnVybCk7XHJcbiAgICAgIGNvbnN0IHBhdGhTYXZlID0gYCR7Z2V0RmlsZU5hbWUoZmlsZS5jb25maWcudXJsKX0ke2V4dH1gO1xyXG4gICAgICByZXR1cm4geyBwYXRoU2F2ZSwgZGF0YTogZmlsZS5kYXRhLCB1cmw6IGZpbGUuY29uZmlnLnVybCB9O1xyXG4gICAgfSkpO1xyXG59O1xyXG4iXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLElBQUFBLEtBQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLE1BQUEsR0FBQUYsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFFLE1BQUEsR0FBQUgsc0JBQUEsQ0FBQUMsT0FBQTtBQUVBLElBQUFHLE1BQUEsR0FBQUgsT0FBQTtBQUFpRCxTQUFBRCx1QkFBQUssR0FBQSxXQUFBQSxHQUFBLElBQUFBLEdBQUEsQ0FBQUMsVUFBQSxHQUFBRCxHQUFBLEtBQUFFLE9BQUEsRUFBQUYsR0FBQTtBQUVqRCxNQUFNRyxZQUFZLEdBQUcsSUFBQUMsY0FBSyxFQUFDLGlCQUFpQixDQUFDO0FBQzdDLE1BQU1DLGNBQWMsR0FBRyxJQUFBRCxjQUFLLEVBQUMsMkJBQTJCLENBQUM7QUFFbEQsTUFBTUUsWUFBWSxHQUFHQSxDQUFDQyxJQUFJLEVBQUVDLFFBQVEsRUFBRUMsSUFBSSxLQUFLO0VBQ3BELE1BQU1DLEtBQUssR0FBRyxJQUFBQyxlQUFRLEVBQUNKLElBQUksRUFBRUMsUUFBUSxDQUFDO0VBQ3RDLE1BQU1JLFFBQVEsR0FBR0YsS0FBSyxDQUFDRyxHQUFHLENBQUVDLElBQUksSUFBSztJQUNuQyxJQUFJTCxJQUFJLEVBQUU7TUFDUixPQUFPTSxPQUFPLENBQUNDLE9BQU8sQ0FBQ1AsSUFBSSxDQUFDSyxJQUFJLEVBQUVHLGNBQUssQ0FBQ0MsR0FBRyxFQUFFO1FBQUVDLFlBQVksRUFBRTtNQUFjLENBQUMsQ0FBQyxDQUFDO0lBQ2hGO0lBRUEsT0FBT0YsY0FBSyxDQUFDQyxHQUFHLENBQUNKLElBQUksRUFBRTtNQUFFSyxZQUFZLEVBQUU7SUFBYyxDQUFDLENBQUMsQ0FDcERDLEtBQUssQ0FBRUMsR0FBRyxJQUFLO01BQ2RoQixjQUFjLENBQUNnQixHQUFHLENBQUM7TUFDbkIsT0FBT0EsR0FBRztJQUNaLENBQUMsQ0FBQztFQUNOLENBQUMsQ0FBQztFQUNGLE9BQU9OLE9BQU8sQ0FBQ08sR0FBRyxDQUFDVixRQUFRLENBQUMsQ0FDekJXLElBQUksQ0FBQ0MsSUFBSSxJQUFJQSxJQUFJLENBQUNDLE1BQU0sQ0FBQ0MsSUFBSSxJQUFJQSxJQUFJLENBQUMsQ0FBQyxDQUN2Q0gsSUFBSSxDQUFDQyxJQUFJLElBQUlBLElBQUksQ0FBQ1gsR0FBRyxDQUFFYSxJQUFJLElBQUs7SUFDL0J2QixZQUFZLENBQUUsZ0JBQWV1QixJQUFJLENBQUNDLE1BQU0sQ0FBQ0MsR0FBSSxHQUFFLENBQUM7SUFDaEQsTUFBTUMsR0FBRyxHQUFHQyxhQUFJLENBQUNDLE9BQU8sQ0FBQ0wsSUFBSSxDQUFDQyxNQUFNLENBQUNDLEdBQUcsQ0FBQztJQUN6QyxNQUFNSSxRQUFRLEdBQUksR0FBRSxJQUFBQyxrQkFBVyxFQUFDUCxJQUFJLENBQUNDLE1BQU0sQ0FBQ0MsR0FBRyxDQUFFLEdBQUVDLEdBQUksRUFBQztJQUN4RCxPQUFPO01BQUVHLFFBQVE7TUFBRVIsSUFBSSxFQUFFRSxJQUFJLENBQUNGLElBQUk7TUFBRUksR0FBRyxFQUFFRixJQUFJLENBQUNDLE1BQU0sQ0FBQ0M7SUFBSSxDQUFDO0VBQzVELENBQUMsQ0FBQyxDQUFDO0FBQ1AsQ0FBQztBQUFDTSxPQUFBLENBQUE1QixZQUFBLEdBQUFBLFlBQUEifQ==