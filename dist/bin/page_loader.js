"use strict";

var _commander = require("commander");
var _chalk = _interopRequireDefault(require("chalk"));
var _listr = _interopRequireDefault(require("listr"));
var _debug = _interopRequireDefault(require("debug"));
var _index = _interopRequireDefault(require("../index.js"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
const program = new _commander.Command();
const debugError = (0, _debug.default)('page-loader:error');
program.version('1.0.0').arguments('<address>').action(address => {
  const taskFunc = (url, func, config) => {
    let result;
    const tasks = new _listr.default([{
      title: `Loading file '${url}'`,
      task: (ctx, task) => func(url, config).then(data => {
        result = data;
        return true;
      }).catch(err => task.skip(`Fail load '${url}'. ${err.message}`))
    }]);
    return tasks.run().then(() => result);
  };
  (0, _index.default)(address, program.output, taskFunc).then(() => process.exit(0)).catch(err => {
    console.log(err);
    debugError(err);
    switch (err.code) {
      case 'ENOTFOUND':
        console.error(_chalk.default.red(`404: page '${err.config.url}' not found.`));
        break;
      default:
        console.error(_chalk.default.red(err.message));
    }
    process.exit(1);
  });
}).description('Download page').option('-o, --output [path]', 'output path');
program.parse(process.argv);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfY29tbWFuZGVyIiwicmVxdWlyZSIsIl9jaGFsayIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfbGlzdHIiLCJfZGVidWciLCJfaW5kZXgiLCJvYmoiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsInByb2dyYW0iLCJDb21tYW5kIiwiZGVidWdFcnJvciIsImRlYnVnIiwidmVyc2lvbiIsImFyZ3VtZW50cyIsImFjdGlvbiIsImFkZHJlc3MiLCJ0YXNrRnVuYyIsInVybCIsImZ1bmMiLCJjb25maWciLCJyZXN1bHQiLCJ0YXNrcyIsIkxpc3RyIiwidGl0bGUiLCJ0YXNrIiwiY3R4IiwidGhlbiIsImRhdGEiLCJjYXRjaCIsImVyciIsInNraXAiLCJtZXNzYWdlIiwicnVuIiwibG9hZGVyIiwib3V0cHV0IiwicHJvY2VzcyIsImV4aXQiLCJjb25zb2xlIiwibG9nIiwiY29kZSIsImVycm9yIiwiY2hhbGsiLCJyZWQiLCJkZXNjcmlwdGlvbiIsIm9wdGlvbiIsInBhcnNlIiwiYXJndiJdLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9iaW4vcGFnZV9sb2FkZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tbWFuZCB9IGZyb20gJ2NvbW1hbmRlcic7XHJcbmltcG9ydCBjaGFsayBmcm9tICdjaGFsayc7XHJcbmltcG9ydCBMaXN0ciBmcm9tICdsaXN0cic7XHJcbmltcG9ydCBkZWJ1ZyBmcm9tICdkZWJ1Zyc7XHJcblxyXG5pbXBvcnQgbG9hZGVyIGZyb20gJy4uL2luZGV4LmpzJztcclxuXHJcbmNvbnN0IHByb2dyYW0gPSBuZXcgQ29tbWFuZCgpO1xyXG5cclxuY29uc3QgZGVidWdFcnJvciA9IGRlYnVnKCdwYWdlLWxvYWRlcjplcnJvcicpO1xyXG5cclxucHJvZ3JhbVxyXG4gIC52ZXJzaW9uKCcxLjAuMCcpXHJcbiAgLmFyZ3VtZW50cygnPGFkZHJlc3M+JylcclxuICAuYWN0aW9uKChhZGRyZXNzKSA9PiB7XHJcbiAgICBjb25zdCB0YXNrRnVuYyA9ICh1cmwsIGZ1bmMsIGNvbmZpZykgPT4ge1xyXG4gICAgICBsZXQgcmVzdWx0O1xyXG4gICAgICBjb25zdCB0YXNrcyA9IG5ldyBMaXN0cihbXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgdGl0bGU6IGBMb2FkaW5nIGZpbGUgJyR7dXJsfSdgLFxyXG4gICAgICAgICAgdGFzazogKGN0eCwgdGFzaykgPT4gZnVuYyh1cmwsIGNvbmZpZylcclxuICAgICAgICAgICAgLnRoZW4oKGRhdGEpID0+IHtcclxuICAgICAgICAgICAgICByZXN1bHQgPSBkYXRhO1xyXG4gICAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAuY2F0Y2goZXJyID0+IHRhc2suc2tpcChgRmFpbCBsb2FkICcke3VybH0nLiAke2Vyci5tZXNzYWdlfWApKSxcclxuICAgICAgICB9LFxyXG4gICAgICBdKTtcclxuICAgICAgcmV0dXJuIHRhc2tzLnJ1bigpXHJcbiAgICAgICAgLnRoZW4oKCkgPT4gcmVzdWx0KTtcclxuICAgIH07XHJcbiAgICBsb2FkZXIoYWRkcmVzcywgcHJvZ3JhbS5vdXRwdXQsIHRhc2tGdW5jKVxyXG4gICAgICAudGhlbigoKSA9PiBwcm9jZXNzLmV4aXQoMCkpXHJcbiAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgY29uc29sZS5sb2coZXJyKTtcclxuICAgICAgICBkZWJ1Z0Vycm9yKGVycik7XHJcbiAgICAgICAgc3dpdGNoIChlcnIuY29kZSkge1xyXG4gICAgICAgICAgY2FzZSAnRU5PVEZPVU5EJzpcclxuICAgICAgICAgICAgY29uc29sZS5lcnJvcihjaGFsay5yZWQoYDQwNDogcGFnZSAnJHtlcnIuY29uZmlnLnVybH0nIG5vdCBmb3VuZC5gKSk7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgY29uc29sZS5lcnJvcihjaGFsay5yZWQoZXJyLm1lc3NhZ2UpKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcHJvY2Vzcy5leGl0KDEpO1xyXG4gICAgICB9KTtcclxuICB9KVxyXG4gIC5kZXNjcmlwdGlvbignRG93bmxvYWQgcGFnZScpXHJcbiAgLm9wdGlvbignLW8sIC0tb3V0cHV0IFtwYXRoXScsICdvdXRwdXQgcGF0aCcpO1xyXG5cclxucHJvZ3JhbS5wYXJzZShwcm9jZXNzLmFyZ3YpO1xyXG4iXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBQUEsVUFBQSxHQUFBQyxPQUFBO0FBQ0EsSUFBQUMsTUFBQSxHQUFBQyxzQkFBQSxDQUFBRixPQUFBO0FBQ0EsSUFBQUcsTUFBQSxHQUFBRCxzQkFBQSxDQUFBRixPQUFBO0FBQ0EsSUFBQUksTUFBQSxHQUFBRixzQkFBQSxDQUFBRixPQUFBO0FBRUEsSUFBQUssTUFBQSxHQUFBSCxzQkFBQSxDQUFBRixPQUFBO0FBQWlDLFNBQUFFLHVCQUFBSSxHQUFBLFdBQUFBLEdBQUEsSUFBQUEsR0FBQSxDQUFBQyxVQUFBLEdBQUFELEdBQUEsS0FBQUUsT0FBQSxFQUFBRixHQUFBO0FBRWpDLE1BQU1HLE9BQU8sR0FBRyxJQUFJQyxrQkFBTyxDQUFDLENBQUM7QUFFN0IsTUFBTUMsVUFBVSxHQUFHLElBQUFDLGNBQUssRUFBQyxtQkFBbUIsQ0FBQztBQUU3Q0gsT0FBTyxDQUNKSSxPQUFPLENBQUMsT0FBTyxDQUFDLENBQ2hCQyxTQUFTLENBQUMsV0FBVyxDQUFDLENBQ3RCQyxNQUFNLENBQUVDLE9BQU8sSUFBSztFQUNuQixNQUFNQyxRQUFRLEdBQUdBLENBQUNDLEdBQUcsRUFBRUMsSUFBSSxFQUFFQyxNQUFNLEtBQUs7SUFDdEMsSUFBSUMsTUFBTTtJQUNWLE1BQU1DLEtBQUssR0FBRyxJQUFJQyxjQUFLLENBQUMsQ0FDdEI7TUFDRUMsS0FBSyxFQUFHLGlCQUFnQk4sR0FBSSxHQUFFO01BQzlCTyxJQUFJLEVBQUVBLENBQUNDLEdBQUcsRUFBRUQsSUFBSSxLQUFLTixJQUFJLENBQUNELEdBQUcsRUFBRUUsTUFBTSxDQUFDLENBQ25DTyxJQUFJLENBQUVDLElBQUksSUFBSztRQUNkUCxNQUFNLEdBQUdPLElBQUk7UUFDYixPQUFPLElBQUk7TUFDYixDQUFDLENBQUMsQ0FDREMsS0FBSyxDQUFDQyxHQUFHLElBQUlMLElBQUksQ0FBQ00sSUFBSSxDQUFFLGNBQWFiLEdBQUksTUFBS1ksR0FBRyxDQUFDRSxPQUFRLEVBQUMsQ0FBQztJQUNqRSxDQUFDLENBQ0YsQ0FBQztJQUNGLE9BQU9WLEtBQUssQ0FBQ1csR0FBRyxDQUFDLENBQUMsQ0FDZk4sSUFBSSxDQUFDLE1BQU1OLE1BQU0sQ0FBQztFQUN2QixDQUFDO0VBQ0QsSUFBQWEsY0FBTSxFQUFDbEIsT0FBTyxFQUFFUCxPQUFPLENBQUMwQixNQUFNLEVBQUVsQixRQUFRLENBQUMsQ0FDdENVLElBQUksQ0FBQyxNQUFNUyxPQUFPLENBQUNDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUMzQlIsS0FBSyxDQUFFQyxHQUFHLElBQUs7SUFDZFEsT0FBTyxDQUFDQyxHQUFHLENBQUNULEdBQUcsQ0FBQztJQUNoQm5CLFVBQVUsQ0FBQ21CLEdBQUcsQ0FBQztJQUNmLFFBQVFBLEdBQUcsQ0FBQ1UsSUFBSTtNQUNkLEtBQUssV0FBVztRQUNkRixPQUFPLENBQUNHLEtBQUssQ0FBQ0MsY0FBSyxDQUFDQyxHQUFHLENBQUUsY0FBYWIsR0FBRyxDQUFDVixNQUFNLENBQUNGLEdBQUksY0FBYSxDQUFDLENBQUM7UUFDcEU7TUFDRjtRQUNFb0IsT0FBTyxDQUFDRyxLQUFLLENBQUNDLGNBQUssQ0FBQ0MsR0FBRyxDQUFDYixHQUFHLENBQUNFLE9BQU8sQ0FBQyxDQUFDO0lBQ3pDO0lBQ0FJLE9BQU8sQ0FBQ0MsSUFBSSxDQUFDLENBQUMsQ0FBQztFQUNqQixDQUFDLENBQUM7QUFDTixDQUFDLENBQUMsQ0FDRE8sV0FBVyxDQUFDLGVBQWUsQ0FBQyxDQUM1QkMsTUFBTSxDQUFDLHFCQUFxQixFQUFFLGFBQWEsQ0FBQztBQUUvQ3BDLE9BQU8sQ0FBQ3FDLEtBQUssQ0FBQ1YsT0FBTyxDQUFDVyxJQUFJLENBQUMifQ==